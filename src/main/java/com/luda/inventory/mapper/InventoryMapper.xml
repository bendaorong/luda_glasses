<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.luda.inventory.dao.InventoryDao">
    <resultMap id="mardMap" type="com.luda.inventory.model.Mard">
        <id property="id" column="id"/>
        <result property="materielId" column="materiel_id"/>
        <result property="storeId" column="store_id"/>
        <result property="currentInventory" column="cur_inventory"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <resultMap id="mardVoMap" type="com.luda.inventory.model.MardVo" extends="mardMap">
        <result property="storeName" column="store_name" />
        <association property="materiel" column="materiel_id" select="com.luda.materiel.dao.MaterielDao.getById"/>
    </resultMap>

    <resultMap id="purchaseOrderVoMap" type="com.luda.inventory.model.PurchaseOrderVo" extends="purchaseOrderMap">
        <result property="storeName" column="store_name"/>
        <result property="supplierName" column="supplier_name"/>
        <result property="businessmanName" column="real_name"/>
    </resultMap>

    <resultMap id="purchaseOrderMap" type="com.luda.inventory.model.PurchaseOrder">
        <id property="purchaseOrderId" column="purchase_order_id"/>
        <result property="code" column="code"/>
        <result property="purchaseDate" column="purchase_date"/>
        <result property="storeId" column="store_id"/>
        <result property="supplierId" column="supplier_id"/>
        <result property="businessmanId" column="businessman_id"/>
        <result property="totalQuantity" column="total_quantity"/>
        <result property="totalAmount" column="total_amount"/>
        <result property="remark" column="remark"/>
        <result property="createUserId" column="create_user_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateUserId" column="update_user_id"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <resultMap id="purchaseOrderItemMap" type="com.luda.inventory.model.PurchaseOrderItem">
        <id property="itemId" column="item_id"/>
        <result property="purchaseOrderId" column="purchase_order_id"/>
        <result property="materielId" column="materiel_id"/>
        <result property="purchasePrice" column="purchase_price"/>
        <result property="purchaseQuantity" column="purchase_quantity"/>
        <result property="remark" column="remark"/>
        <association property="materiel" column="materiel_id" select="com.luda.materiel.dao.MaterielDao.getById"/>
    </resultMap>

    <resultMap id="invntVerifMap" type="com.luda.inventory.model.InventoryVerification">
        <id property="id" column="id"/>
        <result property="code" column="code"/>
        <result property="verifDate" column="verif_date"/>
        <result property="storeId" column="store_id"/>
        <result property="businessmanId" column="businessman_id"/>
        <result property="remark" column="remark"/>
        <result property="createUserId" column="create_user_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateUserId" column="update_user_id"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <resultMap id="invntVerifVoMap" type="com.luda.inventory.model.InventoryVerificationVo" extends="invntVerifMap">
        <result property="storeName" column="store_name"/>
        <result property="businessmanName" column="real_name"/>
    </resultMap>

    <resultMap id="invntVerifItemMap" type="com.luda.inventory.model.InventoryVerificationItem">
        <id property="id" column="id"/>
        <result property="inventoryVerificationId" column="inventory_verification_id"/>
        <result property="materielId" column="materiel_id"/>
        <result property="quantity" column="quantity"/>
        <result property="type" column="invnt_type"/>
        <result property="remark" column="remark"/>
        <association property="materiel" column="materiel_id" select="com.luda.materiel.dao.MaterielDao.getById"/>
    </resultMap>

    <resultMap id="transferOrderMap" type="com.luda.inventory.model.TransferOrder">
        <id property="id" column="id"/>
        <result property="code" column="code"/>
        <result property="transferDate" column="transfer_date"/>
        <result property="outStoreId" column="out_store_id"/>
        <result property="inStoreId" column="in_store_id"/>
        <result property="businessmanId" column="businessman_id"/>
        <result property="remark" column="remark"/>
        <result property="createUserId" column="create_user_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateUserId" column="update_user_id"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <resultMap id="transferOrderVoMap" type="com.luda.inventory.model.TransferOrderVo" extends="transferOrderMap">
        <result property="outStoreName" column="out_store_name"/>
        <result property="inStoreName" column="in_store_name"/>
        <result property="businessmanName" column="real_name"/>
    </resultMap>

    <resultMap id="transferOrderItemMap" type="com.luda.inventory.model.TransferOrderItem">
        <id property="itemId" column="id"/>
        <result property="transferOrderId" column="inventory_transfer_id"/>
        <result property="materielId" column="materiel_id"/>
        <result property="quantity" column="quantity"/>
        <result property="remark" column="remark"/>
        <association property="materiel" column="materiel_id" select="com.luda.materiel.dao.MaterielDao.getById"/>
    </resultMap>

    <select id="getPurchaseOrderMaxCode" resultType="java.lang.String">
        select max(code) from purchase_order
    </select>

    <insert id="savePurchaseOrder" parameterType="com.luda.inventory.model.PurchaseOrder"
            useGeneratedKeys="true" keyProperty="purchaseOrderId">
        insert into purchase_order
        (
            code,
            purchase_date,
            store_id,
            supplier_id,
            businessman_id,
            total_quantity,
            total_amount,
            remark,
            create_User_id,
            create_time,
            update_user_id,
            update_time
        )
        values
        (
            #{code},
            #{purchaseDate},
            #{storeId},
            #{supplierId},
            #{businessmanId},
            #{totalQuantity},
            #{totalAmount},
            #{remark},
            #{createUserId},
            now(),
            #{updateUserId},
            now()
        )
    </insert>

    <update id="updatePurchaseOrderTotalQuantityAndTotalAmount"
            parameterType="com.luda.inventory.model.PurchaseOrder">
        update purchase_order
        set
            total_quantity = #{totalQuantity},
            total_amount = #{totalAmount},
            update_time = now()
        where purchase_order_id = #{purchaseOrderId}
    </update>

    <insert id="insertPurchaseOrderItemBatch" parameterType="com.luda.inventory.model.PurchaseOrderItem">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            INSERT INTO purchase_order_item
            (
                purchase_order_id,
                materiel_id,
                purchase_price,
                purchase_quantity,
                remark
            )
            VALUES (
                #{item.purchaseOrderId},
                #{item.materielId},
                #{item.purchasePrice},
                #{item.purchaseQuantity},
                #{item.remark}
            )
        </foreach>
    </insert>

    <update id="updatePurchaseOrderItemBatch" parameterType="com.luda.inventory.model.PurchaseOrderItem">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update purchase_order_item
            set
                purchase_order_id = #{item.purchaseOrderId},
                materiel_id = #{item.materielId},
                purchase_price = #{item.purchasePrice},
                purchase_quantity = #{item.purchaseQuantity},
                remark = #{item.remark}
            where item_id = #{item.itemId}
        </foreach>
    </update>

    <select id="lockMard" resultMap="mardMap">
        select * from mard where materiel_id = #{materielId} and store_id = #{storeId} for update
    </select>

    <update id="updateMard">
        update mard
        set cur_inventory = cur_inventory + #{increment}, update_time = now()
        where id = #{id}
    </update>

    <insert id="saveMard" parameterType="com.luda.inventory.model.Mard">
        insert into mard
        (
            materiel_id,
            store_id,
            cur_inventory,
            create_time,
            update_time
        )
        values
        (
            #{materielId},
            #{storeId},
            #{currentInventory},
            now(),
            now()
        )
    </insert>

    <select id="getMard" resultMap="mardMap">
        select * from mard where materiel_id = #{materielId} and store_id = #{storeId}
    </select>

    <select id="fetchMardVoList" resultMap="mardVoMap">
        select a.*,b.store_name from mard as a ,store as b where a.store_id =  b.store_id
    </select>

    <select id="fetchPurchaseOrderVoList" resultMap="purchaseOrderVoMap">
        select po.*, s.store_name, sp.supplier_name, u.real_name
        from purchase_order po
        left join store s
        on po.store_id = s.store_id
        left join supplier sp
        on po.supplier_id = sp.supplier_id
        left join admin_user_detail u
        on po.businessman_id = u.admin_user_id
        where po.delete_flag = 0
        order by po.purchase_order_id desc
    </select>

    <select id="getPurchaseOrderById" resultMap="purchaseOrderMap">
        select * from purchase_order where purchase_order_id = #{id} and delete_flag = 0
    </select>

    <select id="fetchPurchaseOrderItemList" resultMap="purchaseOrderItemMap">
        select * from purchase_order_item where purchase_order_id = #{purchaseOrderId}
    </select>

    <select id="getPurchaseOrderItemById" resultMap="purchaseOrderItemMap">
        select * from purchase_order_item where item_id = #{itemId}
    </select>

    <delete id="removePurchaseOrderItem">
        delete from purchase_order_item where item_id = #{itemId}
    </delete>

    <update id="updatePurchaseOrderItem" parameterType="com.luda.inventory.model.PurchaseOrderItem">
        update purchase_order_item
        set
            purchase_order_id = #{purchaseOrderId},
            materiel_id = #{materielId},
            purchase_price = #{purchasePrice},
            purchase_quantity = #{purchaseQuantity},
            remark = #{remark}
        where item_id = #{itemId}
    </update>

    <update id="removePurchaseOrder">
        update purchase_order set delete_flag = 1 where purchase_order_id = #{purchaseOrderId}
    </update>

    <update id="updatePurchaseOrder" parameterType="com.luda.inventory.model.PurchaseOrder">
        update purchase_order
        SET
            purchase_date = #{purchaseDate},
            supplier_id = #{supplierId},
            businessman_id = #{businessmanId},
            remark = #{remark},
            update_user_id = #{updateUserId},
            update_time = now()
        where purchase_order_id = #{purchaseOrderId}
    </update>


    <select id="getInvtVerifMaxCode" resultType="java.lang.String">
        select max(code) from inventory_verification
    </select>
    <insert id="saveInvtVerif" parameterType="com.luda.inventory.model.InventoryVerification"
            useGeneratedKeys="true" keyProperty="id">
        insert into inventory_verification
        (
            code,
            verif_date,
            store_id,
            businessman_id,
            remark,
            create_user_id,
            create_time,
            update_user_id,
            update_time
        )
        VALUES
        (
            #{code},
            #{verifDate},
            #{storeId},
            #{businessmanId},
            #{remark},
            #{createUserId},
            now(),
            #{updateUserId},
            now()
        )
    </insert>

    <insert id="insertInvtVerifItemBatch" parameterType="com.luda.inventory.model.InventoryVerificationItem">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            INSERT INTO inventory_verification_item
            (
                inventory_verification_id,
                materiel_id,
                quantity,
                invnt_type,
                remark
            )
            VALUES (
                #{item.inventoryVerificationId},
                #{item.materielId},
                #{item.quantity},
                #{item.type},
                #{item.remark}
            )
        </foreach>
    </insert>

    <select id="fetchInvntVerifVoList" resultMap="invntVerifVoMap">
        select po.*, s.store_name, u.real_name
        from inventory_verification po
        left join store s
        on po.store_id = s.store_id
        left join admin_user_detail u
        on po.businessman_id = u.admin_user_id
        where po.delete_flag = 0
    </select>

    <insert id="savePurchaseOrderItem" parameterType="com.luda.inventory.model.PurchaseOrderItem"
            useGeneratedKeys="true" keyProperty="itemId">
        INSERT INTO purchase_order_item
        (
            purchase_order_id,
            materiel_id,
            purchase_price,
            purchase_quantity,
            remark
        )
        VALUES (
            #{purchaseOrderId},
            #{materielId},
            #{purchasePrice},
            #{purchaseQuantity},
            #{remark}
        )
    </insert>

    <update id="removeInvntVerification">
        update inventory_verification set delete_flag = 1 where id = #{id}
    </update>

    <select id="getInvntVerificationById" resultMap="invntVerifMap">
        select * from inventory_verification where id = #{id} and delete_flag = 0
    </select>

    <select id="fetchInvntVerificationItemList" resultMap="invntVerifItemMap">
        select * from inventory_verification_item where inventory_verification_id = #{inventoryVerificationId}
    </select>

    <update id="updateInvntVerification" parameterType="com.luda.inventory.model.InventoryVerification">
        update inventory_verification
        set
            verif_date = #{verifDate},
            businessman_id = #{businessmanId},
            remark = #{remark},
            update_user_id = #{updateUserId},
            update_time = now()
        where id = #{id}
    </update>

    <insert id="saveInvntVerificationItem" parameterType="com.luda.inventory.model.InventoryVerificationItem"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO inventory_verification_item
            (
                inventory_verification_id,
                materiel_id,
                quantity,
                invnt_type,
                remark
            )
            VALUES (
                #{inventoryVerificationId},
                #{materielId},
                #{quantity},
                #{type},
                #{remark}
            )
    </insert>

    <delete id="removeInvntVerificationItem">
        delete from inventory_verification_item where id = #{id}
    </delete>

    <select id="getInvntVerificationItemById" resultMap="invntVerifItemMap">
        select * from inventory_verification_item where id = #{id}
    </select>

    <insert id="saveTransferOrder" parameterType="com.luda.inventory.model.TransferOrder"
            useGeneratedKeys="true" keyProperty="id">
        insert into inventory_transfer
        (
            code,
            transfer_date,
            out_store_id,
            in_store_id,
            businessman_id,
            remark,
            create_user_id,
            create_time,
            update_user_id,
            update_time
        )
        values
        (
            #{code},
            #{transferDate},
            #{outStoreId},
            #{inStoreId},
            #{businessmanId},
            #{remark},
            #{createUserId},
            now(),
            #{updateUserId},
            now()
        )
    </insert>

    <insert id="saveTransferOrderItem" parameterType="com.luda.inventory.model.TransferOrderItem"
            useGeneratedKeys="true" keyProperty="itemId">
        insert into inventory_transfer_item
        (
            inventory_transfer_id,
            materiel_id,
            quantity,
            remark
        )
        values
        (
            #{transferOrderId},
            #{materielId},
            #{quantity},
            #{remark}
        )
    </insert>

    <select id="getTransferOrderMaxCode" resultType="java.lang.String">
        select max(code) from inventory_transfer
    </select>

    <select id="fetchTransferOrders" resultMap="transferOrderVoMap">
        select
            t.*, u.real_name, s1.store_name as out_store_name, s2.store_name as in_store_name
        from inventory_transfer t
        left join admin_user_detail u
        on t.businessman_id = u.admin_user_id
        left join store s1
        on t.out_store_id = s1.store_id
        left join store s2
        on t.in_store_id = s2.store_id
        where t.delete_flag = 0 order by t.id desc
    </select>

    <select id="getTransferOrderById" resultMap="transferOrderMap">
        select * from inventory_transfer where id = #{id} and delete_flag = 0
    </select>

    <select id="getTransferOrderItems" resultMap="transferOrderItemMap">
        select * from inventory_transfer_item where inventory_transfer_id = #{transferOrderId}
    </select>

    <select id="getTransferOrderItemById" resultMap="transferOrderItemMap">
        select * from inventory_transfer_item where id = #{itemId}
    </select>

    <delete id="removeTransferOrderItem">
        delete from inventory_transfer_item where id = #{itemId}
    </delete>

    <update id="updateTransferOrder" parameterType="com.luda.inventory.model.TransferOrder">
        update inventory_transfer
        set
            transfer_date = #{transferDate},
            businessman_id = #{businessmanId},
            remark = #{remark},
            update_user_id = #{updateUserId},
            update_time = now()
        where id = #{id}
    </update>

    <update id="removeTransferOrder">
        update inventory_transfer set delete_flag = 1 where id = #{id}
    </update>
</mapper>